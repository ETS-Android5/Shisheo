// Generated by view binder compiler. Do not edit!
package com.shisheo.net.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.shisheo.net.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowRestaurantsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView descriptionTxt;

  @NonNull
  public final TextView nameTxt;

  @NonNull
  public final TextView offerTxt;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final RatingBar ratingBar;

  private RowRestaurantsBinding(@NonNull CardView rootView, @NonNull TextView descriptionTxt,
      @NonNull TextView nameTxt, @NonNull TextView offerTxt, @NonNull ImageView postImage,
      @NonNull RatingBar ratingBar) {
    this.rootView = rootView;
    this.descriptionTxt = descriptionTxt;
    this.nameTxt = nameTxt;
    this.offerTxt = offerTxt;
    this.postImage = postImage;
    this.ratingBar = ratingBar;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowRestaurantsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowRestaurantsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_restaurants, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowRestaurantsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description_txt;
      TextView descriptionTxt = rootView.findViewById(id);
      if (descriptionTxt == null) {
        break missingId;
      }

      id = R.id.name_txt;
      TextView nameTxt = rootView.findViewById(id);
      if (nameTxt == null) {
        break missingId;
      }

      id = R.id.offer_txt;
      TextView offerTxt = rootView.findViewById(id);
      if (offerTxt == null) {
        break missingId;
      }

      id = R.id.post_image;
      ImageView postImage = rootView.findViewById(id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = rootView.findViewById(id);
      if (ratingBar == null) {
        break missingId;
      }

      return new RowRestaurantsBinding((CardView) rootView, descriptionTxt, nameTxt, offerTxt,
          postImage, ratingBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
