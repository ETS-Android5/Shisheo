// Generated by Dagger (https://dagger.dev).
package com.shisheo.net.network;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideApi$app_debugFactory implements Factory<Api> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideApi$app_debugFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public Api get() {
    return provideApi$app_debug(retrofitProvider.get());
  }

  public static NetworkModule_ProvideApi$app_debugFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideApi$app_debugFactory(retrofitProvider);
  }

  public static Api provideApi$app_debug(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApi$app_debug(retrofit));
  }
}
