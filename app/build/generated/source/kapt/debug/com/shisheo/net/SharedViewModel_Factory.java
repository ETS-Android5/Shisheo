// Generated by Dagger (https://dagger.dev).
package com.shisheo.net;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedViewModel_Factory implements Factory<SharedViewModel> {
  private final Provider<Repository> repositoryProvider;

  public SharedViewModel_Factory(Provider<Repository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SharedViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static SharedViewModel_Factory create(Provider<Repository> repositoryProvider) {
    return new SharedViewModel_Factory(repositoryProvider);
  }

  public static SharedViewModel newInstance(Repository repository) {
    return new SharedViewModel(repository);
  }
}
